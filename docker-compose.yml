services:
  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    restart: always
    environment:
      # You must change these. Replace `localhost:5000` with your DNS name if you plan to access from external network
      MAIN_URL: "http://localhost:5001"
      FRONTEND_URL: "http://localhost:5001"
      NEXT_PUBLIC_BACKEND_URL: "http://localhost:5001/api"
      JWT_SECRET: "Ouc7nQIX1MZOJncI0hMTgUEZ8RVtEUnXLqmxiU84pvcnwemGZVvj9pQAPHPGICs4A2Kobf7v+qm2n1Fvv04DGQ=="
      
      # Database and Redis configuration
      DATABASE_URL: "postgresql://postiz-user:postiz-password@postiz-postgres:5432/postiz-db-local"
      REDIS_URL: "redis://postiz-redis:6379"
      BACKEND_INTERNAL_URL: "http://localhost:3000"
      IS_GENERAL: "true" # Required for self-hosting
      DISABLE_REGISTRATION: "false" # Only allow single registration, then disable signup
      
      # Local file storage configuration
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
      
      # Since we're running locally without HTTPS initially
      NOT_SECURED: "true"
      
      # TikTok API Configuration (opcional - s√≥ configure se for usar TikTok)
      # TIKTOK_CLIENT_ID: "seu_client_id_16_caracteres"
      # TIKTOK_CLIENT_SECRET: "seu_client_secret_32_caracteres"
    volumes:
      - postiz-config:/config/
      - postiz-uploads:/uploads/
    ports:
      - 5001:5000
    networks:
      - postiz-network
    depends_on:
      postiz-postgres:
        condition: service_healthy
      postiz-redis:
        condition: service_healthy

  postiz-postgres:
    image: postgres:17-alpine
    container_name: postiz-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postiz-password
      POSTGRES_USER: postiz-user
      POSTGRES_DB: postiz-db-local
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - postiz-network
    # Note: Not exposing postgres port to avoid conflict with your existing postgres on 5432
    healthcheck:
      test: pg_isready -U postiz-user -d postiz-db-local
      interval: 10s
      timeout: 3s
      retries: 3

  postiz-redis:
    image: redis:7.2
    container_name: postiz-redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-redis-data:/data
    networks:
      - postiz-network
    # Note: Not exposing redis port to avoid conflict with your existing redis on 6379

volumes:
  postgres-volume:
    external: false
  postiz-redis-data:
    external: false
  postiz-config:
    external: false
  postiz-uploads:
    external: false

networks:
  postiz-network:
    external: false
